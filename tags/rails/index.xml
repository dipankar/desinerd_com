<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>rails on Dipankar&#39;s blog</title>
    <link>https://www.desinerd.com/tags/rails/</link>
    <description>Recent content in rails on Dipankar&#39;s blog</description>
    <image>
      <title>Dipankar&#39;s blog</title>
      <url>https://www.desinerd.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.desinerd.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Oct 2009 00:00:00 +0000</lastBuildDate><atom:link href="https://www.desinerd.com/tags/rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>obsessing about bdb, queues</title>
      <link>https://www.desinerd.com/posts/obsessing-about-bdb-queues/</link>
      <pubDate>Fri, 09 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>https://www.desinerd.com/posts/obsessing-about-bdb-queues/</guid>
      <description>So my nightmares do no cease to end, still debating queue solutions and databases. After spending a lot of time thinking about how to handle 100 million entries , concurrency and a lot of jazz here are some conclusions that I have reached. Tokyo Tyrant needs some testing personally. Can it work well within a constrained VPS ? I doubt that after reading all the test results. So need to do a benchmark for this.</description>
    </item>
    
  </channel>
</rss>
